// Реализовать постоянную запись данных в канал (главный поток).
// Реализовать набор из N воркеров, которые читают произвольные данные из канала и выводят в stdout.
// Необходима возможность выбора количества воркеров при старте.

// Программа должна завершаться по нажатию Ctrl+C.
//Выбрать и обосновать способ завершения работы всех воркеров.

package main

import (
	"fmt"
	"os"
	"os/signal"
	"strconv"
	"syscall"
	"time"
)

func writeToChannel(ch chan<- int) {
	for i := 0; ;i++{
		ch <- i
		time.Sleep(time.Millisecond * 500)
	}
	
	// скорее всего пока из канала не будет вычтено значение программа встат на паузу
}


// <-chan обозначает что из канала можно только читать.
// Можно передать такой аргумент в функцию или создать канал только для чтения

//chan<- - канал только для записи
func worker(ch <-chan int) { // из канала можно только читать

	for i := range ch {
		fmt.Println(i) // <- ch - вычитывает значение из канала = i
	}
}

func stop(ch chan int, ex chan os.Signal) {
	// записывает в канал сигнал о закрытие программы
	signal.Notify(ex, syscall.SIGHUP, syscall.SIGINT, syscall.SIGTERM, syscall.SIGQUIT)

	v := <-ex 
	fmt.Println("exit:")
	fmt.Println(v)
	fmt.Println("done")
	// чтение из канала ->
	// если в канале ничего нет то функция вгорутине зависнет до того момента пока в канале не появится значение
	close(ch)
}



func main() {
	workerAmount , err := strconv.Atoi(os.Args[1])
	if err != nil {
		panic(err)
	}

	// в небуферизированный конал можно положить только оддно значение осле чего он блокируется
	// до момента пока из его не будет произведено чтение
	ch := make(chan int)
	exitChanel := make(chan os.Signal) // канал с сигналом о завершение работы


	// работает постоянно
	//  go - помещает функцию в отдельный поток и программа не дожидается ее завершения а ппродолжает идти дальше
	go writeToChannel(ch)

	for i := 0; i < workerAmount; i++ {
		go worker(ch)
		
	}

	// функция постоянно отслеживает не появился ли сигнал об остановке программы
	stop(ch, exitChanel)


}



// что происходит при завершение программы - при нажатие ctrl c
// почитать про системные сигналы